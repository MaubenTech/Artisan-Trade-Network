diff --git a/node_modules/react-native-modern-datepicker/src/datePicker/DatePicker.js b/node_modules/react-native-modern-datepicker/src/datePicker/DatePicker.js
index 7fb2842..cf3a2f9 100644
--- a/node_modules/react-native-modern-datepicker/src/datePicker/DatePicker.js
+++ b/node_modules/react-native-modern-datepicker/src/datePicker/DatePicker.js
@@ -1,11 +1,11 @@
-import React, {createContext, useReducer, useContext, useState} from 'react';
+import React, {createContext, useReducer, useContext, useState, useEffect} from 'react';
 import {View, StyleSheet} from 'react-native';
 import PropTypes from 'prop-types';
 
 import {Calendar, SelectMonth, SelectTime} from './components';
 import {utils} from '../utils';
 
-const options = {
+const _options = {
   backgroundColor: '#fff',
   textHeaderColor: '#212c35',
   textDefaultColor: '#2d4150',
@@ -41,12 +41,53 @@ const useCalendar = () => {
   return contextValue;
 };
 
-const DatePicker = props => {
+//TODO: Customize the datepicker a bit more. Add the animation where scrolling left or right has the same effect as clicking the left or right buttons respectively
+const DatePicker = ({
+  onSelectedChange = () => null,
+  onMonthYearChange = () => null,
+  onTimeChange = () => null,
+  onDateChange = () => null,
+  current = '',
+  selected = '',
+  minimumDate = '',
+  maximumDate = '',
+  selectorStartingYear = 0,
+  selectorEndingYear = 3000,
+  disableDateChange = false,
+  isGregorian = true,
+  configs = {},
+  reverse = 'unset',
+  options = {},
+  mode = 'datepicker',
+  minuteInterval = 5,
+  _style = {},
+}) => {
+  const [props, setProps] = useState({
+    onSelectedChange,
+    onMonthYearChange,
+    onTimeChange,
+    onDateChange,
+    current,
+    selected,
+    minimumDate,
+    maximumDate,
+    selectorStartingYear,
+    selectorEndingYear,
+    disableDateChange,
+    isGregorian,
+    configs,
+    reverse,
+    options,
+    mode,
+    minuteInterval,
+    _style,
+  });
   const calendarUtils = new utils(props);
+
   const contextValue = {
     ...props,
     reverse: props.reverse === 'unset' ? !props.isGregorian : props.reverse,
-    options: {...options, ...props.options},
+    options: {..._options, ...props.options},
     utils: calendarUtils,
     state: useReducer(reducer, {
       activeDate: props.current || calendarUtils.getToday(),
@@ -57,6 +98,7 @@ const DatePicker = props => {
       timeOpen: props.mode === 'time',
     }),
   };
+
   const [minHeight, setMinHeight] = useState(300);
   const style = styles(contextValue.options);
 
@@ -96,7 +138,7 @@ const DatePicker = props => {
   );
 };
 
-const styles = theme =>
+const styles = (theme) =>
   StyleSheet.create({
     container: {
       backgroundColor: theme.backgroundColor,
@@ -124,26 +166,26 @@ const optionsShape = {
 const modeArray = ['datepicker', 'calendar', 'monthYear', 'time'];
 const minuteIntervalArray = [1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60];
 
-DatePicker.defaultProps = {
-  onSelectedChange: () => null,
-  onMonthYearChange: () => null,
-  onTimeChange: () => null,
-  onDateChange: () => null,
-  current: '',
-  selected: '',
-  minimumDate: '',
-  maximumDate: '',
-  selectorStartingYear: 0,
-  selectorEndingYear: 3000,
-  disableDateChange: false,
-  isGregorian: true,
-  configs: {},
-  reverse: 'unset',
-  options: {},
-  mode: 'datepicker',
-  minuteInterval: 5,
-  style: {},
-};
+// DatePicker.defaultProps = {
+//   onSelectedChange: () => null,
+//   onMonthYearChange: () => null,
+//   onTimeChange: () => null,
+//   onDateChange: () => null,
+//   current: '',
+//   selected: '',
+//   minimumDate: '',
+//   maximumDate: '',
+//   selectorStartingYear: 0,
+//   selectorEndingYear: 3000,
+//   disableDateChange: false,
+//   isGregorian: true,
+//   configs: {},
+//   reverse: 'unset',
+//   options: {},
+//   mode: 'datepicker',
+//   minuteInterval: 5,
+//   style: {},
+// };
 
 DatePicker.propTypes = {
   onSelectedChange: PropTypes.func,
diff --git a/node_modules/react-native-modern-datepicker/src/datePicker/components/Calendar.js b/node_modules/react-native-modern-datepicker/src/datePicker/components/Calendar.js
index 868c302..8834f87 100644
--- a/node_modules/react-native-modern-datepicker/src/datePicker/components/Calendar.js
+++ b/node_modules/react-native-modern-datepicker/src/datePicker/components/Calendar.js
@@ -1,5 +1,5 @@
 import React, {useEffect} from 'react';
-import {View, StyleSheet, Text, Animated} from 'react-native';
+import { View, StyleSheet, Text, Animated } from 'react-native';
 
 import {Header, Days} from '.';
 import {useCalendar} from '../DatePicker';
@@ -41,6 +41,7 @@ const styles = theme =>
     container: {
       flexDirection: 'column',
       flex: 1,
+      // backgroundColor: "#0f0"
     },
     daysName: {
       paddingBottom: 10,
diff --git a/node_modules/react-native-modern-datepicker/src/datePicker/components/Days.js b/node_modules/react-native-modern-datepicker/src/datePicker/components/Days.js
index 05de512..e4e80be 100644
--- a/node_modules/react-native-modern-datepicker/src/datePicker/components/Days.js
+++ b/node_modules/react-native-modern-datepicker/src/datePicker/components/Days.js
@@ -19,8 +19,9 @@ const Days = () => {
   };
 
   const changeItemHeight = ({nativeEvent}) => {
-    const {width} = nativeEvent.layout;
-    !itemSize && setItemSize((width / 7).toFixed(2) * 1 - 0.5);
+    const { width } = nativeEvent.layout;
+    if (width != 0)
+      !itemSize && setItemSize((width / 7).toFixed(2) * 1 - 0.5);
   };
 
   return (
@@ -67,6 +68,7 @@ const styles = theme =>
       flexWrap: 'wrap',
     },
     dayItem: {
+      paddingTop: 3,
       flex: 1,
       justifyContent: 'center',
       alignItems: 'center',
@@ -84,7 +86,7 @@ const styles = theme =>
     },
     dayTextSelected: {
       color: theme.selectedTextColor,
-      fontFamily: theme.headerFont,
+      fontFamily: theme.defaultFont,
     },
     dayTextDisabled: {
       opacity: 0.2,
diff --git a/node_modules/react-native-modern-datepicker/src/datePicker/components/Header.js b/node_modules/react-native-modern-datepicker/src/datePicker/components/Header.js
index 06f0db1..5342e52 100644
--- a/node_modules/react-native-modern-datepicker/src/datePicker/components/Header.js
+++ b/node_modules/react-native-modern-datepicker/src/datePicker/components/Header.js
@@ -4,7 +4,7 @@ import {View, TouchableOpacity, Text, Image, StyleSheet, Animated, I18nManager}
 
 import {useCalendar} from '../DatePicker';
 
-const Header = ({changeMonth}) => {
+const Header = ({changeMonth = () => null}) => {
   const {
     options,
     disableDateChange,
@@ -132,6 +132,7 @@ const styles = (theme) =>
     container: {
       alignItems: 'center',
       flexDirection: 'row-reverse',
+      // backgroundColor: "#ff0"
     },
     reverseContainer: {
       flexDirection: 'row',
@@ -143,8 +144,9 @@ const styles = (theme) =>
       opacity: 1,
     },
     arrow: {
-      width: 18,
-      height: 18,
+      // backgroundColor: "#f0f",
+      width: 12,
+      height: 12,
       opacity: 0.9,
       tintColor: theme.mainColor,
       margin: 2,
@@ -190,6 +192,7 @@ const styles = (theme) =>
       fontFamily: theme.headerFont,
     },
     centerWrapper: {
+      // backgroundColor: "#f0f",
       borderColor: theme.borderColor,
       paddingVertical: 4,
       paddingHorizontal: 8,
@@ -202,9 +205,9 @@ const styles = (theme) =>
     },
   });
 
-Header.defaultProps = {
-  changeMonth: () => null,
-};
+// Header.defaultProps = {
+//   changeMonth: () => null,
+// };
 
 Header.propTypes = {
   changeMonth: PropTypes.func,
diff --git a/node_modules/react-native-modern-datepicker/src/datePicker/components/SelectMonth.js b/node_modules/react-native-modern-datepicker/src/datePicker/components/SelectMonth.js
index 6ccfa19..125a454 100644
--- a/node_modules/react-native-modern-datepicker/src/datePicker/components/SelectMonth.js
+++ b/node_modules/react-native-modern-datepicker/src/datePicker/components/SelectMonth.js
@@ -157,7 +157,7 @@ const SelectMonth = () => {
                   currentMonth === item + 1 && style.selectedItemText,
                   disabled && style.disabledItemText,
                 ]}>
-                {utils.getMonthName(item)}
+                {utils.getMonthName(item).slice(0, 3)}
               </Text>
             </TouchableOpacity>
           );
@@ -228,8 +228,8 @@ const styles = theme =>
       opacity: 0,
     },
     arrow: {
-      width: 18,
-      height: 18,
+      width: 12,
+      height: 12,
       opacity: 0.9,
       tintColor: theme.mainColor,
       margin: 2,
@@ -253,6 +253,9 @@ const styles = theme =>
       textAlignVertical: 'center',
       minWidth: 100,
       textAlign: 'center',
+      borderColor: theme.borderColor,
+      borderRadius: 5,
+      borderWidth: 1,
     },
   });
 
